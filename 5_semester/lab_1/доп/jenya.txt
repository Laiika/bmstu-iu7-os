Любая операционная система работает под управлением прерывания. Прерываие - движок ОС. В совр ОП система прерываний, принято выделять 3 типа прерываний:
1) системные вызовы system call (буквально, вызов системы) - программные прерывания (прерывание программы) API (определённый набор) (спец. POSIX)
2) исключительные ситуации (исключения)
3) аппаратные прерывания (от аппаратуры) (если видим interapted)
Группы ап.Пр.:
1) прерывания от системного таймера ("таймер") (единственное периодическое прерываие в системе) (в досе 1 раз в секунду) DOS: 18 и 2 десятых в секунду уложатся гГЦ
2) прерывания от внешних устройств (информируют процессор о завершении опрерации ввода-вывода (их оч много)) (внУстр: монитор и внешн. карточка)
РЕГИСТРЫ ПРОЦЕССОРЫ - неотъемлемая часть процессора (не память)
memery mapping (отображение) (MOV, команды работы с памятью)
input/output mapping (IN/OUT, порты ввода/вывода, порт - это адрес. минимальный порт (усл. назв.) - байт)
2 АП:
1) оперативной памяти
2) портов ввода/вывода (контроллера прерываний и ; в порты посылается команда)
2) от действия оператора

ctrl+c завершение процессов

/Признак времени/

тактовый генератор (гГц) - _П_П_П_ (делители и линии задержки) _l_l_l_l_ (тики) (приходит импульс на контроллер прерывания (не прийти не может) (ничто не может его отменить))
=> вектор прерывания, используется системой для получения адреса обработчика Прер в досе по таблице векторов прерывания. 
начинается с 0го адреса, 256 байт, 4 байт адрес (2Б сегмент, 2, far-адрес)
когда вызывается обработчик прерывания? по тику (18,2 раза в секунду int 8h вызывается по тику, а не мы вызываем, система переходит по известному адресу на выполнение обработчика прерывания) (система не может перейти по неизвестному адресу)

ЛАБА1.
windowsXP, 32. Доступен режим симуляции DOSа. (в DosBox обработчик не достанем - проверить)
Что-то вскроем.
Sourcer (sr.exe) сможем получить листинг обработчика int 8H. Переведёт машинный код в ассемблер. (какие-то интегральные схемы, intel8086)
(продавать компы с установленной системой DOS => популярность систем, ПК 8086 10 лет - очень много, microsoft не раскрывает коды своих систем) (резидентные программы - появилось в DOSе)
ДизАссемблировать V86 режим эмуляции DOSа
в Sourcerе указать begginning adress end ещё чёт, всякие адреса. В листинге 4 столбца: 
адреса типа (сегмент смещения)  |  команда в 16ичном формате  |  эквивалентная команды на ассемблере  |  комментарий
получаем таблицу векторов прерываний, 4 байт памяти. Конечный адресс = начальный + сколько может занимать что-то в ТП. 
прерывание заканчивается командой IRET (interapted return) (+ ОТЛИЧИЕ ОТ RET!!)
JUMP -> IRET (IRET и его адрес указать в листинге) (нет инфы, что делается в этом участке кода)

ФУНКЦИИ обработчика 8го прерывания:
1) инкремент счётчика реального времени (инкрементирует реальное время, которое показывает комп ) (в оперативной памяти по известному адреса BIOS)
(таблетка - аккумуляторная микроСхема. CMOS микросхема - пичитать в вики (для времени служит)) (ведение счетчика времени, содержимое счётка копируется в BIOS при включении, чтобы обращаться к оперативной памяти)
2) декремент времени до отключения моторчика дисковода (винчестера не было, информация считывалась с флопиков)
(считывание с массива -> цикл с предусловием (for), while) (раскрутить диск до определённой скорости, чтобы считать. Винчестер вообще не останавливался)
(непроизводительные затраты времени ("долго"), чтобы не происходило - функ выключения возложена на таймер, это отложенное действие; могут инициироваться на обработчик системного таймера)
(команды посылается на контролер дисковода)
3) вызов пользовательского прерывания 1Ch (microSoft разработала) (оперативная память - 1 мб: ОС и программа приложения, которое выполняется) (одна единственная исполняемая программа) (Питер Нортен, Нортен-команды) (1Ch (это заглушка) чтобы разработчики не вешались на 8е прерывание. Почему не стоит вешаться? если повесить слишком много не прерывание, оно будет выполняться дольше) (но большинство резидентов на int 8h)

НАСЧЁТ ЛАБЫ:
Получив листинг, построить схему алгоритма.
СХЕМА АЛГОРИТМА - не блок-схема (по ГОСТу)
sub1/ sub2/ ... (subroting - классическое название подпрограммы) (так же надо дизАссемблировать)

2 листинга, 2 схемы (8е прерывание, субратина (запрещает прерывание, но там есть ветвление))
отчёт сдаётся в бумажном виде.
в алгоритме показать каждую команду. Если решают одну команду - смотреть по смыслу.
Префиксная команда lock (перед какой командой стоит, делает следующую код=манду неделимой (то есть прервать нельзя). Почему стоит lock и почему именно перед ней?)





